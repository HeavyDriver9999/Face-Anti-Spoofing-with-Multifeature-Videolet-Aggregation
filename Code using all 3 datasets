import numpy as np
import os
import cv2

# Load the datasets
casia_fasd_dir = "path/to/CASIA-FASD"
three_dmad_dir = "path/to/3DMAD"
msu_mfsd_dir = "path/to/MSU-MFSD"

# Define the MFA parameters
patch_size = 32
overlap = 0.5
num_frames = 10
features = ["LBP", "HOG", "SIFT"]

# Define the function for extracting MFA features from a video
def extract_mfa_features(video_path):
    # Load the video frames
    cap = cv2.VideoCapture(video_path)
    frames = []
    while True:
        ret, frame = cap.read()
        if not ret:
            break
        frames.append(frame)
    cap.release()

    # Extract MFA features from the video frames
    features_list = []
    for feature in features:
        feature_list = []
        for i in range(0, len(frames), num_frames):
            videolet = frames[i:i+num_frames]
            feature_vector = []
            for frame in videolet:
                gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
                patch = cv2.resize(gray, (patch_size, patch_size))
                if feature == "LBP":
                    hist = cv2.calcHist([patch], [0], None, [256], [0, 256])
                    feature_vector.extend(hist)
                elif feature == "HOG":
                    hog = cv2.HOGDescriptor()
                    hog_features = hog.compute(patch)
                    feature_vector.extend(hog_features)
                elif feature == "SIFT":
                    sift = cv2.xfeatures2d.SIFT_create()
                    keypoints, descriptors = sift.detectAndCompute(patch, None)
                    if descriptors is not None:
                        feature_vector.extend(descriptors.flatten())
            feature_list.append(feature_vector)
        features_list.append(feature_list)

    # Aggregate the MFA features from different features and videolets
    aggregated_features = []
    for feature_list in features_list:
        for i in range(0, len(feature_list)):
            feature_vector = np.concatenate(feature_list[i:i+2], axis=0)
            aggregated_features.extend(feature_vector)
    return aggregated_features

# Extract MFA features from the datasets
casia_fasd_features = []
for subdir in os.listdir(casia_fasd_dir):
    if os.path.isdir(os.path.join(casia_fasd_dir, subdir)):
        for video_file in os.listdir(os.path.join(casia_fasd_dir, subdir)):
            video_path = os.path.join(casia_f
